name: Build and Release Yaci CLI Zip

on:
  push:
    tags:
      - 'v*'

jobs:
  buildAndPush:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          native-image-musl: 'true'
          distribution: 'liberica'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Get Tag from version file
        run: |
          TAG=$(grep "tag=" config/version | cut -d'=' -f2)
          echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Grant execute permission for gradlew
        working-directory: applications/cli
        run: chmod +x gradlew
      - name: Copy CI specific native-image properties
        working-directory: applications/cli
        if: runner.os == 'Linux'
        run: |
            cp src/main/resources/META-INF/native-image/yaci-cli/native-image.properties.ci src/main/resources/META-INF/native-image/yaci-cli/native-image.properties
            echo "os_prefix=ubuntu" >> $GITHUB_ENV
      - name: MacOS specific env
        if: runner.os == 'macOS'
        run: |            
            echo "os_prefix=macos" >> $GITHUB_ENV
      - name: Build with Gradle
        working-directory: applications/cli
        run: ./gradlew --no-daemon -i -Pversion=${{ env.TAG }} clean build nativeCompile cliZip
      - name: Copy artifacts
        working-directory: applications/cli
        run: mv build/yaci-cli-${{ env.TAG }}.zip build/yaci-cli-${{ env.TAG }}-${{ env.os_prefix }}-${{ runner.arch }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./applications/cli/build/yaci-cli-${{ env.TAG }}-${{ env.os_prefix }}-${{ runner.arch }}.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

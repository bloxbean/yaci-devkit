plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.graalvm.buildtools.native' version '0.10.2'
	id 'java'
	id 'signing'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

java {
    sourceCompatibility = '21'
}

repositories {
	//maven { url 'https://repo.spring.io/release' }
	mavenCentral()
	mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

ext {
    set('springShellVersion', "3.2.4")
}

dependencies {
	implementation 'org.springframework.shell:spring-shell-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

	implementation('com.bloxbean.cardano:yaci:0.3.3') {
        exclude group: 'com.bloxbean.cardano', module: 'cardano-client-core'
    }
	implementation 'com.bloxbean.cardano:cardano-client-lib:0.6.2'
	implementation 'com.bloxbean.cardano:cardano-client-backend:0.6.2'
    implementation 'com.bloxbean.cardano:cardano-client-backend-blockfrost:0.6.2'
    //implementation 'com.bloxbean.cardano:cardano-client-supplier-local:0.5.1'

    implementation 'org.apache.commons:commons-compress:1.23.0'

	implementation 'org.jeasy:easy-rules-core:4.1.0'
	implementation 'org.jeasy:easy-rules-mvel:4.1.0'

	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'com.google.guava:guava:33.1.0-jre'
	implementation 'org.apache.commons:commons-text:1.9'

	implementation 'org.codehaus.janino:janino:3.1.8'

    runtimeOnly 'org.postgresql:postgresql:42.7.1'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

//springAot {
//	removeXmlSupport = false
//	removeSpelSupport = false
//	removeYamlSupport = false
//}

tasks.register('genClusterTemplatesZip', Zip) {
    from sourceSets.main.resources
    include 'localcluster/**/*'

    archiveFileName.set('localcluster.zip')
    destinationDirectory.set(layout.buildDirectory.dir('resources/main'))
}


compileJava {
    dependsOn genClusterTemplatesZip
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

gitProperties {
    failOnNoGitDirectory = false
}

task cliZip(type: Zip) {
    def zipDirName = "yaci-cli-${project.version}"
    def configDir = zipDirName + "/config"

    from('build/native/nativeCompile') {
        into(zipDirName)
    }

    from('config') {
        into(configDir)
        include '**/*.properties'
    }

    include 'yaci-cli*'
    archiveFileName = "yaci-cli-${project.version}.zip"
    destinationDirectory = file("build")
}

cliZip.dependsOn nativeCompile

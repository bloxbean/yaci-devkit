(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[941],{8846:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/commands",function(){return n(9759)}])},9759:function(e,s,n){"use strict";n.r(s),n.d(s,{__toc:function(){return o}});var t=n(5893),a=n(2673),i=n(7913),d=n(8426);n(9128);var l=n(2643);let o=[{depth:2,value:"Common Commands",id:"common-commands"},{depth:3,value:"create-node",id:"create-node"},{depth:3,value:"reset",id:"reset"},{depth:3,value:"stop",id:"stop"},{depth:3,value:"cluster",id:"cluster"},{depth:3,value:"exit",id:"exit"},{depth:3,value:"topup",id:"topup"},{depth:3,value:"default-addresses",id:"default-addresses"},{depth:3,value:"show-faucet-addresses",id:"show-faucet-addresses"},{depth:3,value:"utxos",id:"utxos"},{depth:3,value:"tip",id:"tip"},{depth:3,value:"info",id:"info"},{depth:2,value:"Log Commands",id:"log-commands"},{depth:3,value:"logs",id:"logs"},{depth:3,value:"yaci-store-logs",id:"yaci-store-logs"},{depth:3,value:"ogmios-logs",id:"ogmios-logs"},{depth:3,value:"kupo-logs",id:"kupo-logs"}];function _createMdxContent(e){let s=Object.assign({h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",span:"span",a:"a"},(0,l.a)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"common-commands",children:"Common Commands"}),"\n",(0,t.jsx)(s.p,{children:"Yaci CLI commands are used to create and interact with the local devnet."}),"\n",(0,t.jsx)(s.h3,{id:"create-node",children:"create-node"}),"\n",(0,t.jsx)(s.p,{children:"To create a devnet node."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"create-node"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" [options]"})]})})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Example:"}),"\nCreate a new node with the default options. 1 sec block time and overwrite the existing node if it exists."]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"create-node"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"-o"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"--start"})]})})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Options:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"--overwrite or -o boolean"})," : Overwrite the existing node if it exists."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"--start"})," : Start the node after creation."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"--block-time or -b double"})," : Set the block time in seconds. Default is 1 sec."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"--slot-length or -s double"})," : Slot Length in sec. Default is 1 sec."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"--epoch-length or -e int"})," : Epoch Length in slots. Default is 500."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"--era String"})," : Era (babbage, conway). Default is babbage."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"})," There are many other node specific configuration that can be set through env file. Please refer to the ",(0,t.jsx)(s.a,{href:"./node-configuration",children:"Node Configuration"})," for more details."]}),"\n",(0,t.jsx)(s.h3,{id:"reset",children:"reset"}),"\n",(0,t.jsx)(s.p,{children:"Reset local devnet. Delete data and logs folder and restart."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"reset"})})})}),"\n",(0,t.jsx)(s.p,{children:'If the devnet gets stuck or you simply want to reset the data and restart with the same configuration, simply use the command "reset".\nIt will restore your devnet to its initial state, allowing you to continue your development seamlessly.'}),"\n",(0,t.jsx)(s.h3,{id:"stop",children:"stop"}),"\n",(0,t.jsx)(s.p,{children:"Stop the local devnet."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"stop"})})})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"}),' You can stop the devnet using command "stop". This will stop the devnet and you can start it again using the "start" command.\nThe devnet will start from the last block it was stopped at. Based on the ',(0,t.jsx)(s.code,{children:"securityParam"})," configuration in devnet node,\nthe node may get stuck if it is stopped for a long time. Please refer to the ",(0,t.jsx)(s.a,{href:"./node-configuration",children:"Node Configuration"})," to\nknow how to provide a custom value for ",(0,t.jsx)(s.code,{children:"securityParam"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"cluster",children:"cluster"}),"\n",(0,t.jsxs)(s.p,{children:["To switch to ",(0,t.jsx)(s.code,{children:"devnet"})," mode for an existing devnet node when Yaci CLI is not in devnet mode."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"yaci-cli:>"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"cluster"})]})})}),"\n",(0,t.jsx)(s.h3,{id:"exit",children:"exit"}),"\n",(0,t.jsx)(s.p,{children:"To stop the node and other running services and exit from devnet node."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"devnet:default>exit"})})})}),"\n",(0,t.jsxs)(s.p,{children:["Similarly, you can use the ",(0,t.jsx)(s.code,{children:"exit"})," command in non-devnet mode to exit from the Yaci CLI."]}),"\n",(0,t.jsx)(s.h3,{id:"topup",children:"topup"}),"\n",(0,t.jsx)(s.p,{children:"To top up the address with the given ada amount."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"topup"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" [--address "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"String]"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" [--value "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"double]"})]})})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Example:"}),"\nTo fund address with 45k ada."]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"topup"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"addr_test1qrzufj3g0ua489yt235wtc3mrjrlucww2tqdnt7kt5rs09grsag6vxw5v053atks5a6whke03cf2qx3h3g2nhsmzwv3sgml3ed"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"45000"})]})})}),"\n",(0,t.jsx)(s.h3,{id:"default-addresses",children:"default-addresses"}),"\n",(0,t.jsx)(s.p,{children:"To show the default addresses."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"default-addresses"})})})}),"\n",(0,t.jsxs)(s.p,{children:["By ",(0,t.jsx)(s.strong,{children:"default"}),", the devnet is created with 20 default addresses at different derivation path from a test 24 words mnemonic\nand each address is funded with 10k ada.\nThis is useful if you want to write your tests or tools using DevKit and you need some addresses to work with.\nSo, you know that these addresses are always available in the devnet."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"24 words mnemonic for the default addresses is:"})}),"\n",(0,t.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"text","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"test test test test test test test test test test test test test test test test test test test test test test test sauce"})})})}),"\n",(0,t.jsx)(s.h3,{id:"show-faucet-addresses",children:"show-faucet-addresses"}),"\n",(0,t.jsx)(s.p,{children:"To show the faucet addresses."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"show-faucet-addresses"})})})}),"\n",(0,t.jsxs)(s.p,{children:["The faucet addresses are the addresses that are used to fund the default addresses in the devnet and also used to top up the addresses using the ",(0,t.jsx)(s.code,{children:"topup"})," command."]}),"\n",(0,t.jsx)(s.h3,{id:"utxos",children:"utxos"}),"\n",(0,t.jsx)(s.p,{children:"To show the UTXOs of the given address."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"utxos"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" [address] [--pretty-print-inline-datum]"})]})})}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"utxos"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"addr_test1qrzufj3g0ua489yt235wtc3mrjrlucww2tqdnt7kt5rs09grsag6vxw5v053atks5a6whke03cf2qx3h3g2nhsmzwv3sgml3ed"})]})})}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsxs)(s.span,{className:"line",children:[(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"utxos"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"addr_test1qrzufj3g0ua489yt235wtc3mrjrlucww2tqdnt7kt5rs09grsag6vxw5v053atks5a6whke03cf2qx3h3g2nhsmzwv3sgml3ed"}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-string)"},children:"--pretty-print-inline-datum"})]})})}),"\n",(0,t.jsx)(s.h3,{id:"tip",children:"tip"}),"\n",(0,t.jsx)(s.p,{children:"To show the tip of the node."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"tip"})})})}),"\n",(0,t.jsx)(s.h3,{id:"info",children:"info"}),"\n",(0,t.jsx)(s.p,{children:"To show the info of the node."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"info"})})})}),"\n",(0,t.jsx)(s.h2,{id:"log-commands",children:"Log Commands"}),"\n",(0,t.jsx)(s.h3,{id:"logs",children:"logs"}),"\n",(0,t.jsx)(s.p,{children:"To show the logs of the node."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"logs"})})})}),"\n",(0,t.jsx)(s.h3,{id:"yaci-store-logs",children:"yaci-store-logs"}),"\n",(0,t.jsx)(s.p,{children:"To show the logs of the yaci-store (if enabled)."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"yaci-store-logs"})})})}),"\n",(0,t.jsx)(s.h3,{id:"ogmios-logs",children:"ogmios-logs"}),"\n",(0,t.jsx)(s.p,{children:"To show the logs of the ogmios (if enabled)."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"ogmios-logs"})})})}),"\n",(0,t.jsx)(s.h3,{id:"kupo-logs",children:"kupo-logs"}),"\n",(0,t.jsx)(s.p,{children:"To show the logs of the kupo (if enabled)."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Usage:"})}),"\n"]}),"\n",(0,t.jsx)(s.pre,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.code,{"data-language":"bash","data-theme":"default",children:(0,t.jsx)(s.span,{className:"line",children:(0,t.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"kupo-logs"})})})})]})}let r={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,l.a)(),e.components);return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/commands.mdx",route:"/commands",timestamp:172620374e4,pageMap:[{kind:"Meta",data:{index:"Introduction",yaci_cli_distribution:"Yaci CLI (Non Docker Dist)",how_to_use:"How to use",about:{title:"About",type:"page"},services:"Services",commands:"Yaci CLI Commands","node-configuration":"Node Configuration","multi-node-setup":"Multi-node setup",tutorials:"Tutorials"}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"MdxPage",name:"commands",route:"/commands"},{kind:"MdxPage",name:"how_to_use",route:"/how_to_use"},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"multi-node-setup",route:"/multi-node-setup"},{kind:"MdxPage",name:"node-configuration",route:"/node-configuration"},{kind:"MdxPage",name:"services",route:"/services"},{kind:"Folder",name:"tutorials",route:"/tutorials",children:[{kind:"Meta",data:{meshjs:"MeshJS",ccl:"Cardano Client Lib (Java)","lucid-evolution":"Lucid Evolution"}},{kind:"Folder",name:"ccl",route:"/tutorials/ccl",children:[{kind:"MdxPage",name:"overview",route:"/tutorials/ccl/overview"},{kind:"Meta",data:{overview:"Overview"}}]},{kind:"Folder",name:"lucid-evolution",route:"/tutorials/lucid-evolution",children:[{kind:"MdxPage",name:"overview",route:"/tutorials/lucid-evolution/overview"},{kind:"Meta",data:{overview:"Overview"}}]},{kind:"Folder",name:"meshjs",route:"/tutorials/meshjs",children:[{kind:"MdxPage",name:"overview",route:"/tutorials/meshjs/overview"},{kind:"Meta",data:{overview:"Overview"}}]}]},{kind:"MdxPage",name:"yaci_cli_distribution",route:"/yaci_cli_distribution"}],flexsearch:{codeblocks:!0},title:"Commands",headings:o},pageNextRoute:"/commands",nextraLayout:i.ZP,themeConfig:d.Z};s.default=(0,a.j)(r)},8426:function(e,s,n){"use strict";var t=n(5893);n(7294);let a={logo:(0,t.jsx)("span",{children:(0,t.jsx)("b",{children:"Yaci DevKit"})}),project:{link:"https://github.com/bloxbean/yaci-devkit"},chat:{link:"https://discord.gg/JtQ54MSw6p"},docsRepositoryBase:"https://github.com/bloxbean/yaci-devkit/tree/develop/docs",footer:{text:"\xa9 2024 BloxBean project"},useNextSeoProps:()=>({titleTemplate:"%s – Yaci DevKit"}),head:(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("meta",{property:"description",content:"Yaci DevKit - Accelerate Cardano development with a customizable devnet, featuring rapid setup, lightweight indexing, and browser-based viewer"}),(0,t.jsx)("meta",{property:"og:title",content:"Yaci DevKit - Accelerate Cardano development with a customizable devnet"}),(0,t.jsx)("meta",{property:"og:description",content:"Yaci DevKit - Accelerate Cardano development with a customizable devnet, featuring rapid setup, lightweight indexing, and browser-based viewer"})]})};s.Z=a},5789:function(){}},function(e){e.O(0,[774,543,888,179],function(){return e(e.s=8846)}),_N_E=e.O()}]);